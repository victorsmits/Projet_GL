<?xml version="1.0"?>
<doc>
    <assembly>
        <name>ADONetHelper.Oledb</name>
    </assembly>
    <members>
        <member name="T:ADONetHelper.Oledb.OledbClient">
            <summary>
            A specialized instance of <see cref="T:ADONetHelper.DbClient"/> that is used to query an Oledb data source
            </summary>
            <seealso cref="T:ADONetHelper.DbClient"/>
        </member>
        <member name="P:ADONetHelper.Oledb.OledbClient.Connection">
            <summary>
            An instance of <see cref="T:System.Data.OleDb.OleDbConnection"/> to use to connect to an OledDb data source
            </summary>
            <returns></returns>
        </member>
        <member name="P:ADONetHelper.Oledb.OledbClient.Provider">
            <summary>
            Gets the name of the OLE DB provider specified in the "Provider= " clause of the connection string.
            </summary>
        </member>
        <member name="M:ADONetHelper.Oledb.OledbClient.#ctor(System.String,System.Data.CommandType)">
            <summary>
            Instantiates a new instance of <see cref="T:ADONetHelper.Oledb.OledbClient"/> with the passed in <paramref name="connectionString"/> and <paramref name="queryCommandType"/>
            </summary>
            <param name="connectionString">The connection string used to query a data store</param>
            <param name="queryCommandType">Represents how a command should be interpreted by the data provider</param>
        </member>
        <member name="M:ADONetHelper.Oledb.OledbClient.#ctor(System.String)">
            <summary>
            Instantiates a new instance of <see cref="T:ADONetHelper.Oledb.OledbClient"/> with the passed in <paramref name="connectionString"/>
            </summary>
            <param name="connectionString">The connection string used to query a data store</param>
        </member>
        <member name="M:ADONetHelper.Oledb.OledbClient.#ctor(ADONetHelper.ISqlExecutor)">
            <summary>
            Instantiates a new instance of <see cref="T:ADONetHelper.Oledb.OledbClient"/> with the passed in <paramref name="executor"/>
            </summary>
            <param name="executor">An instance of <see cref="T:ADONetHelper.ISqlExecutor"/></param>
        </member>
        <member name="M:ADONetHelper.Oledb.OledbClient.#ctor(System.Data.OleDb.OleDbConnection)">
            <summary>
            Instantiates a new instance of <see cref="T:ADONetHelper.Oledb.OledbClient"/> with the passed in <paramref name="connection"/>
            </summary>
            <param name="connection">An instance of <see cref="T:System.Data.OleDb.OleDbConnection"/> to use to query a database </param>
        </member>
        <member name="M:ADONetHelper.Oledb.OledbClient.#ctor(System.String,ADONetHelper.IDbObjectFactory)">
            <summary>
            Instantiates a new instance of <see cref="T:ADONetHelper.Oledb.OledbClient"/> using the passed in <paramref name="connectionString"/> and <paramref name="factory"/>
            </summary>
            <param name="connectionString">Connection string to use to query a database</param>
            <param name="factory">An instance of <see cref="T:ADONetHelper.IDbObjectFactory"/></param>
        </member>
        <member name="M:ADONetHelper.Oledb.OledbClient.ResetState">
            <summary>
            Updates the <see cref="T:System.Data.ConnectionState"/> property of the current <see cref="T:System.Data.OleDb.OleDbConnection"/> object.
            </summary>
            <remarks>
            Some OLE DB providers can check the current state of the connection. 
            For example, if the database server has recycled since you opened your <see cref="T:System.Data.OleDb.OleDbConnection"/>, 
            the State property will continue to return Open. If you are working with an OLE DB Provider that 
            supports polling for this information on a live connection, calling the <see cref="M:System.Data.OleDb.OleDbConnection.ResetState"/> 
            method and then checking the State property will tell you that the connection is no longer open. 
            The ResetState method relies on functionality in the OLE DB Provider to verify the current state 
            of the connection. To determine if your OLE DB Provider supports this functionality, 
            check the provider's documentation for information on DBPROP_CONNECTIONSTATUS.
            </remarks>
        </member>
    </members>
</doc>
